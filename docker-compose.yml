version: '3.8'

services:
  # Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # API Server
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - REDIS_URL=redis://redis:6379
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET}
      - S3_REGION=${S3_REGION}
      - JWT_SECRET=${JWT_SECRET}
      - ADMIN_PUBLIC_KEY=${ADMIN_PUBLIC_KEY}
      - ADMIN_PRIVATE_KEY=${ADMIN_PRIVATE_KEY}
      - CORS_ORIGIN=http://localhost:3000,http://localhost:3002
    depends_on:
      - redis
    restart: unless-stopped

  # Web App
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - NEXT_PUBLIC_APP_NAME=상담센터
    depends_on:
      - api
    restart: unless-stopped

  # Admin Console
  admin:
    build:
      context: ./apps/admin
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - NEXT_PUBLIC_ADMIN_MODE=true
      - NEXT_PUBLIC_APP_NAME=관리자 콘솔
    depends_on:
      - api
    restart: unless-stopped

volumes:
  redis_data:
